
defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Terraform Plan
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version_file: .opentofu-version
      - name: OpenTofu fmt
        id: fmt
        run: tofu fmt -check
      - name: OpenTofu Init
        id: init
        run: tofu init
      - name: OpenTofu Validate
        id: validate
        run: tofu validate -no-color
      - name: OpenTofu Plan (pull request)
        if: github.event_name == 'pull_request'
        id: plan
        run: tofu plan -no-color -input=false
        timeout-minutes: 3
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "tofu\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('OpenTofu Format and Style')
            })

            // 2. Prepare format of the comment
            const output = `#### OpenTofu Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }
      - name: OpenTofu Plan (main branch)
        if: github.ref == 'refs/heads/main'
        id: plan-main
        run: tofu plan -no-color -out plan.out -input=false
      - name: Upload plan file (main branch)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: plan-out
          path: plan.out

  deploy-infrastructure:
    if: github.ref == 'refs/heads/main'
    needs: plan
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version_file: .opentofu-version
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
      - run: tofu init
      - name: Download plan file
        uses: actions/download-artifact@v4
        with:
          name: plan-out
          path: .
      - name: Deploy
        id: deploy
        run: tofu apply --auto-approve plan.out
